{"version":3,"sources":["components/Board/WinnerSection/WinnerSection.module.scss","components/Board/PlayBoard/PlayBoard.module.scss","static/tictoctoe.png","static/winner.png","static/ops.png","components/Board/PlayBoard/PlayBoard.js","store/actions/moves.js","components/Board/WinnerSection/WinnerSection.js","components/Board/Board.js","container/App.js","store/reducers/index.js","store/sagas/index.js","constants/config.js","utils/index.jsx","store/epics/pingWinner.jsx","store/epics/index.js","index.js","store/index.js"],"names":["module","exports","PlayBoard","currentPlayer","board","dispatch","useDispatch","className","s","containerBack","customPaddingTop","src","tictocImage","alt","length","map","row","rowIndex","key","colValue","colIndex","onClick","col","type","selectCell","clickText","noCursor","tictok","WinnerSection","winner","customTitle","customSubtitle","customPaddingBottom","opsImage","customButton","winnerImage","defaultProps","selectBoard","state","selectGame","game","Board","useSelector","App","exact","path","component","from","to","createBoard","i","Array","fill","_","combineReducers","action","newBoard","JSON","parse","stringify","rootSaga","all","WINNING_COMBINATIONS","PLAYERS","checkWinner","BOARD","flat","forEach","combination","player","filter","cv","pingWinner","action$","state$","pipe","ofType","value","combineEpics","store","initialState","sagaMiddleware","createSagaMiddleware","epicMiddleware","createEpicMiddleware","middlewares","thunkMiddleware","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","rootReducer","run","rootEpic","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f952ba1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerBack\":\"WinnerSection_containerBack__2FXB6\",\"customPaddingTop\":\"WinnerSection_customPaddingTop__1h7hO\",\"customTitle\":\"WinnerSection_customTitle__3w5Dr\",\"customSubtitle\":\"WinnerSection_customSubtitle__3wxKm\",\"customPaddingBottom\":\"WinnerSection_customPaddingBottom__3x4KS\",\"customButton\":\"WinnerSection_customButton__2-Ajg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerBack\":\"PlayBoard_containerBack__3jy2p\",\"customPaddingTop\":\"PlayBoard_customPaddingTop__329md\",\"textPic\":\"PlayBoard_textPic__2cIHW\",\"clickText\":\"PlayBoard_clickText__AXLZJ\",\"tictok\":\"PlayBoard_tictok__2WhXi\",\"box0col0\":\"PlayBoard_box0col0__S7b-i\",\"box0col1\":\"PlayBoard_box0col1__36CLg\",\"box0col2\":\"PlayBoard_box0col2__3OCbG\",\"box1col0\":\"PlayBoard_box1col0__3jwMo\",\"box1col1\":\"PlayBoard_box1col1__2mrsS\",\"box1col2\":\"PlayBoard_box1col2__3I_Ys\",\"box2col0\":\"PlayBoard_box2col0__2FZ4u\",\"box2col1\":\"PlayBoard_box2col1__yQBtI\",\"box2col2\":\"PlayBoard_box2col2__3TY3g\",\"noCursor\":\"PlayBoard_noCursor__3Rvqx\"};","module.exports = __webpack_public_path__ + \"static/media/tictoctoe.a829e0f9.png\";","module.exports = __webpack_public_path__ + \"static/media/winner.844bf2dc.png\";","module.exports = __webpack_public_path__ + \"static/media/ops.f23d9f28.png\";","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { selectCell } from '../../../store/actions/moves'\nimport tictocImage from '../../../static/tictoctoe.png'\nimport PropTypes, { any } from 'prop-types'\nimport s from './PlayBoard.module.scss'\n\nconst PlayBoard = ({ currentPlayer, board }) => {\n    const dispatch = useDispatch()\n    return (\n        <section className={`w-100 ${s.containerBack}`}>\n            <div className={`container`}>\n                <div className=\"row m-0\">\n                    <div className={`col-12 col-lg-5 m-auto ${s.customPaddingTop} text-center`}>\n                        <img className=\"img-fluid\" src={tictocImage} alt=\"tictoc\" />\n                    </div>\n                    <div className={`col-12 col-lg-7 ${s.customPaddingTop} m-auto`}>\n                        <div className=\"row m-0\">\n                            {board && board.length > 0 &&\n                                board.map((row, rowIndex) => (\n                                    <div key={`cvUnique${rowIndex}`} className=\"col-lg-9 col-12 m-auto\">\n                                        <div className=\"row m-0\">\n                                            {row && row.length > 0 &&\n                                                row.map((colValue, colIndex) => (\n                                                    <div\n                                                        onClick={() => {\n                                                            if (!colValue) {\n                                                                dispatch(selectCell(currentPlayer, rowIndex, colIndex))\n                                                            }\n                                                        }}\n                                                        key={`boxUnique${colIndex}`}\n                                                        className={`col ${s.clickText} ${colValue ? s.noCursor : ''} ${s.tictok} ${s[`box${rowIndex}col${colIndex}`]}`}>\n                                                        {colValue ? colValue : ''}\n                                                    </div>\n                                                ))}\n                                        </div>\n                                    </div>\n                                ))}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nPlayBoard.propTypes = {\n    currentPlayer: PropTypes.string,\n    board: PropTypes.arrayOf(PropTypes.arrayOf(any))\n}\n\nexport default PlayBoard","export const SELECT_CELL = 'SELECT_CELL'\nexport const CURRENTLY_WINNER = 'CURRENTLY_WINNER'\nexport const TRY_AGAIN = 'TRY_AGAIN'\n\nexport function selectCell(currentPlayer, row, col) {\n\treturn {\n\t\ttype: SELECT_CELL,\n\t\tcurrentPlayer,\n\t\trow,\n\t\tcol\n\t}\n}\n\nexport function resetBoard() {\n\treturn {\n\t\ttype: TRY_AGAIN\n\t}\n}","import React from 'react'\nimport { resetBoard } from '../../../store/actions/moves'\nimport { useDispatch } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport winnerImage from '../../../static/winner.png'\nimport opsImage from '../../../static/ops.png'\nimport s from './WinnerSection.module.scss'\n\nconst WinnerSection = ({winner}) => {    \n    const dispatch = useDispatch()\n    return (\n        <section className={`w-100 ${s.containerBack}`}>\n            <div className=\"container\">\n                {winner === 'Tie'\n                    ? <div className=\"row m-0\">\n                        <div className={`col-12 ${s.customPaddingTop} text-center`}>\n                            <h1 className={s.customTitle}>OOPPS... IT'S A TIE !!!</h1>\n                            <h2 className={`${s.customSubtitle} pt-5`}> TRY AGAIN</h2>\n                        </div>\n                        <div className={`col-lg-4 col-12 ${s.customPaddingBottom} m-auto`}>\n                            <img className=\"img-fluid\" src={opsImage} alt=\"tictoc\" />\n                        </div>\n                        <section className=\"w-100 pb-5 text-center\">\n                            <button onClick={() => dispatch(resetBoard())} className={s.customButton}>TRY AGAIN</button>\n                        </section>\n                    </div>\n                    :\n                    <div className=\"row m-0\">\n                        <div className={`col-12 ${s.customPaddingTop} text-center`}>\n                            <h1 className={s.customTitle}>AND THE WINNER IS....</h1>\n                            <h2 className={`${s.customSubtitle} pt-5`}> PLAYER: {winner}</h2>\n                        </div>\n                        <div className={`col-lg-4 col-12 ${s.customPaddingBottom} m-auto`}>\n                            <img className=\"img-fluid\" src={winnerImage} alt=\"tictoc\" />\n                        </div>\n                        <section className=\"w-100 pb-5 text-center\">\n                            <button onClick={() => dispatch(resetBoard())} className={s.customButton}>TRY AGAIN</button>\n                        </section>\n                    </div>\n                }\n            </div>\n        </section>\n    )\n}\n\nWinnerSection.propTypes = {\n    winner: PropTypes.string\n}\n\nWinnerSection.defaultProps = {\n\twinner: null\n}\n\nexport default WinnerSection","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport PlayBoard from './PlayBoard'\nimport WinnerSection from './WinnerSection'\n\nconst selectBoard = (state) => state.board\nconst selectGame = (state) => state.game\n\nconst Board = () => {\n  const board = useSelector(selectBoard)\n  const game = useSelector(selectGame)\n  \n  return (\n    <section className=\"w-100\">\n      {game.winner ?\n        <WinnerSection winner={game.winner} /> :\n        <PlayBoard currentPlayer={game.currentPlayer} board={board} />\n      }\n    </section>\n  )\n}\nexport default Board\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Redirect, Route } from 'react-router-dom'\nimport Board from '../components/Board'\n\nconst App = () => {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path='/syftfe' component={Board} />\n                <Redirect from=\"*\" to=\"/syftfe\" />\n            </Switch>\n        </Router>\n    )\n}\n\nexport default App","import { combineReducers } from 'redux'\nimport { SELECT_CELL, CURRENTLY_WINNER, TRY_AGAIN } from '../actions/moves'\n\nexport const createBoard = (i) =>\n\tArray(i)\n\t\t.fill(null)\n\t\t.map(_ =>\n\t\t\tArray(i)\n\t\t\t\t.fill(null)\n\t\t)\n\nexport const board = (state = createBoard(3), action) => {\n\tswitch (action.type) {\n\t\tcase SELECT_CELL: {\n\t\t\tconst newBoard = JSON.parse(JSON.stringify(state))\n\t\t\tnewBoard[action.row][action.col] = action.currentPlayer\n\t\t\treturn newBoard\n\t\t}\n\t\tcase TRY_AGAIN: {\n\t\t\treturn createBoard(3)\n\t\t}\n\t\tdefault: {\n\t\t\treturn state\n\t\t}\n\t}\n}\n\nexport const game = (state = { currentPlayer: 'X', winner: null }, action) => {\n\tswitch (action.type) {\n\t\tcase SELECT_CELL: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPlayer: state.currentPlayer === 'X' ? 'O' : 'X'\n\t\t\t}\n\t\t}\n\t\tcase CURRENTLY_WINNER: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\twinner: action.winner\n\t\t\t}\n\t\t}\n\t\tcase TRY_AGAIN: {\n\t\t\treturn {\n\t\t\t\tcurrentPlayer: 'X', \n\t\t\t\twinner: null \n\t\t\t}\n\t\t}\n\t\tdefault: {\n\t\t\treturn state\n\t\t}\n\t}\n}\n\nexport default combineReducers({\n\tboard,\n\tgame\n})\n","import { all } from 'redux-saga/effects'\n\nexport default function* rootSaga() {\n  yield all([]);\n}\n","export const WINNING_COMBINATIONS = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n]\n\nexport const PLAYERS = ['X', 'O']","import { WINNING_COMBINATIONS, PLAYERS } from '../constants/config'\n\nexport const checkWinner = (board) => {\n    if(!board) return false\n    let winner\n    const BOARD = board.flat() // Flatting the board\n    //Looping in the combinations\n    WINNING_COMBINATIONS.forEach((combination) => {\n        //Looping in the players\n        PLAYERS.forEach((player) => {\n            if (BOARD[combination[0]] === player &&\n                BOARD[combination[1]] === player &&\n                BOARD[combination[2]] === player) {\n                //IF the player match the combinations above assign the variable winner to the player\n                winner = player\n            }\n        })\n    })\n    // If we don't have any winner and ALL the board is already filled will return a tie\n    if (!winner && BOARD.filter(cv => !cv).length === 0) {\n        winner = 'Tie'\n    }\n    // IF we have a winner will return the winner\n    return winner\n}","import { ofType } from 'redux-observable'\nimport { SELECT_CELL, CURRENTLY_WINNER } from '../actions/moves'\nimport { filter, map } from 'rxjs/operators'\nimport { checkWinner } from '../../utils'\n\nconst pingWinner = (action$, state$) => {\n    return action$.pipe(\n        ofType(SELECT_CELL),\n        filter(() => checkWinner(state$.value.board)),\n        map(() => {\n            return {\n                type: CURRENTLY_WINNER,\n                winner: checkWinner(state$.value.board)\n            }\n        })\n    )\n}\n\nexport default pingWinner","import { combineEpics } from 'redux-observable'\nimport pingWinner from './pingWinner'\n\nexport default combineEpics(\n    pingWinner\n)","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport App from './container/App'\nimport configureStore from './store'\nimport { Provider } from 'react-redux'\nimport '../node_modules/bootstrap/dist/js/bootstrap'\nimport '../node_modules/bootstrap/dist/css/bootstrap.css'\n\nconst store = configureStore()\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n","import { createStore, applyMiddleware } from 'redux'\n\nimport thunkMiddleware from 'redux-thunk'\nimport createSagaMiddleware from 'redux-saga'\nimport { createEpicMiddleware } from 'redux-observable'\n\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\n\nimport rootReducer from './reducers'\nimport rootSaga from './sagas'\nimport rootEpic from './epics'\n\nexport default function configureStore(initialState) {\n  const sagaMiddleware = createSagaMiddleware()\n  const epicMiddleware = createEpicMiddleware()\n  const middlewares = [sagaMiddleware, epicMiddleware, thunkMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n  const enhancers = [middlewareEnhancer]\n  const composedEnhancers = composeWithDevTools(...enhancers)\n\n  const store = createStore(rootReducer, initialState, composedEnhancers)\n\n  sagaMiddleware.run(rootSaga)\n  epicMiddleware.run(rootEpic)\n\n  return store\n}\n"],"sourceRoot":""}